#ifndef GAMEAUTOMATIONRELAYER_H
#define GAMEAUTOMATIONRELAYER_H

#include <QObject>
#include <functional>
#include "GameConfig.h"
#include <QTimer>
#include "AbstractGameAutomation.h"
#include "../types/TangoPair.h"

class GameClient;
class TangoPair;


class GameAutomationRelayer : public AbstractGameAutomation
{
    Q_OBJECT
    friend class Client;
    friend class AbstractClient;
    friend class LocalClient;
public:
    explicit GameAutomationRelayer(QObject *parent = nullptr);
    ~GameAutomationRelayer();
    
    bool start();
public:
// c++ style public slots:
    std::function<void ()> make_answer_success_slotter();
    std::function<void ()> make_stop_slotter();
private:
    
    bool prepare_tango_pool(const std::vector<TangoPair> &tango_list, unsigned int n);
    bool set_timeout_mode(
        const std::function<void (int &)> &fade_timearr_functor,
        const std::function<void (int &)> &ack_timearr_functor
    );
    inline bool setup_automation();
    void select_new_tango();
    void make_faded_event();
    inline void stop_automation();
    void clear_state();
};

#endif // GAMEAUTOMATIONRELAYER_H
